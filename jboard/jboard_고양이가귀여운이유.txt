┌─────────────────────────────┐
│         클라이언트          │
│       (브라우저 / JSP)      │
└─────────────────────────────┘
           │ GET /user/register.do
           ▼
┌─────────────────────────────┐
│ RegisterController.doGet()  │
│  → 회원가입 페이지 포워드   │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│   register.jsp 렌더링        │
│ - validation.js 로드          │
│ - postcode.js 로드          │
└─────────────────────────────┘
           │
           │ 사용자 입력
           ▼
┌─────────────────────────────┐
│ 아이디(uid) 중복 체크 버튼 클릭 │
└─────────────────────────────┘
           │
           │ fetch GET /user/check.do?col=uid&value=uid
           ▼
┌─────────────────────────────┐
│ CheckUserController.doGet() │
│  → userService.getUserCount │
│  → DAO.selectCount(col)     │
│  → DB 조회                   │
└─────────────────────────────┘
           │ count 반환
           ▼
┌─────────────────────────────┐
│ 클라이언트                  │
│ - 중복 결과 표시             │
│ - isUidOk 상태 업데이트      │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 비밀번호(pass1, pass2) 입력 │
│ → focusout 이벤트            │
└─────────────────────────────┘
           │
           │ validation.js
           │ - 정규식 체크
           │ - pass1==pass2 비교
           ▼
┌─────────────────────────────┐
│ 클라이언트                  │
│ - passResult 표시           │
│ - isPassOk 상태 업데이트     │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 이름(name) 입력 → focusout    │
│ → validation.js 정규식 체크  │
│ - isNameOk 상태 업데이트      │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 별명(nick) 중복 체크 버튼 클릭 │
└─────────────────────────────┘
           │ fetch GET /user/check.do?col=nick&value=nick
           ▼
┌─────────────────────────────┐
│ CheckUserController.doGet() │
│  → userService.getUserCount │
│  → DAO.selectCount(col)     │
│  → DB 조회                   │
└─────────────────────────────┘
           │ count 반환
           ▼
┌─────────────────────────────┐
│ 클라이언트                  │
│ - nickResult 표시           │
│ - isNickOk 상태 업데이트     │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 이메일(email) 인증번호 받기 버튼 클릭 │
└─────────────────────────────┘
           │ fetch GET /user/check.do?col=email&value=email
           ▼
┌─────────────────────────────┐
│ CheckUserController.doGet() │
│  → userService.getUserCount │
│  → DAO.selectCount(col)     │
│  → DB 조회                   │
│  → count==0 → userService.sendEmailCode(email) │
│      - 인증코드 생성       │
│      - Gmail SMTP 발송     │
│      - 세션(sessAuthCode) 저장 │
└─────────────────────────────┘
           │ JSON 반환
           ▼
┌─────────────────────────────┐
│ 클라이언트                  │
│ - emailResult 표시           │
│ - 인증번호 입력창 표시       │
│ - isEmailOk 상태: false      │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 이메일 인증번호 입력 후 확인 버튼 클릭 │
└─────────────────────────────┘
           │ fetch POST /user/check.do {code}
           ▼
┌─────────────────────────────┐
│ CheckUserController.doPost()│
│  → 세션(sessAuthCode)과 code 비교 │
│  → JSON {isMatched: true/false} 반환 │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 클라이언트                  │
│ - emailResult 표시           │
│ - isEmailOk 상태 업데이트    │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 휴대폰(hp) 입력 → focusout    │
│ → validation.js 정규식 체크  │
│ → fetch GET /user/check.do?col=hp&value=hp │
└─────────────────────────────┘
           │ JSON count 반환
           ▼
┌─────────────────────────────┐
│ 클라이언트                  │
│ - hpResult 표시             │
│ - isHpOk 상태 업데이트       │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 우편번호(zip) 검색 버튼 클릭 │
│ → postcode()                  │
│ - Daum API → zip, addr1 자동 입력 │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ 모든 is*Ok 상태 true이면     │
│ form.submit() POST /user/register.do │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ RegisterController.doPost() │
│ - POST 파라미터 수집        │
│ - UserDTO 생성               │
│ - userService.register(dto)  │
│     → DAO.insert(dto)        │
│ - DB 회원 정보 저장          │
│ - 리다이렉트 /user/login.do?code=101 │
└─────────────────────────────┘
           │
           ▼
┌─────────────────────────────┐
│ DB(User 테이블)              │
│ - 회원 정보 저장            │
│   컬럼: usid, pass, name, nick, email, hp, zip, addr1, addr2, reg_ip │
│ - 중복 체크용 SELECT COUNT(*) │
└─────────────────────────────┘
